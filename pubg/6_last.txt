#include<stdio.h>
#include<ctype.h>
void First(char[],char);
void addToResultSet(char[],char);
int numOfProductions;
char productionSet[10][10];
int main(){
    int i;
    char choice;
    char c;
    char result[20];
    printf("enter the productions?:");
    scanf("%d",&numOfProductions);
    for(i=0;i<numOfProductions;i++){
        printf("Enter production no %d",i+1);
        scanf("%s",productionSet[i]);
    }
    do{
        printf("\n Find the First of :");
        scanf("%c",&c);
        scanf("%c",&c);
        printf("%c",c);
        First(result,c);
        printf("\n First (%c)={",c);
        for(int i=0;result[i]!='\0';i++){
            printf("%c",result[i]);
        }
        printf("}\n");
        printf("press y to continue:");
        scanf("%c",&choice);
        scanf("%c",&choice);

         
        
    }
    while(choice=='y'|| choice=='Y');

  


}


void First(char * Result,char c){
    // printf("First");
    int i ,j,k;
    char subResult[20];
    int foundEpsilon;
    subResult[0]='\0';
    Result[0]='\0';
    if(!(isupper(c))){
        addToResultSet(Result,c);
        return;
    }
    for(i=0;i<numOfProductions;i++){
        if(productionSet[i][0]==c){
            if(productionSet[i][2]=='$')
                addToResultSet(Result,'$');
        
        else{
            j=2;
            while(productionSet[i][j]!='\0'){
                foundEpsilon=0;
                First(subResult,productionSet[i][j]);
                for(k=0;subResult[k]!='\0';k++)
                    addToResultSet(Result,subResult[k]);
                for(k=0;subResult[k]!='\0';k++)
                    if(subResult[k]=='$'){
                        foundEpsilon=1;
                        break;
                    }
                    if(!foundEpsilon)
                    break;
                j++;
                
            }
        }

    }
}return;}

void addToResultSet(char Result[],char val){
    int k;
    for(k=0;Result[k]!='\0';k++)
        if(Result[k]==val)
            return ;
    Result[k]=val;
    Result[k+1]='\0';
}

// input:
// 5
// S-aABb
// A-c
// A-$
// B-d
// B-$
// o/p:
// S-a
// A-c,$
// B-d,$
